pipeline {
    agent any

    environment {
        DOCKER_IMAGE = "branson404/project-django"
        DOCKER_TAG = "${DOCKER_IMAGE}:${BUILD_NUMBER}"
    }

    stages {
        stage('Git checkout') {
            steps {
                git branch: 'main', url: 'https://github.com/branson404/project-django'
            }
        }

        stage('SonarQube Analysis') {
            steps {
                script {
                    def sonarScanner = tool 'SonarScanner'
                    withSonarQubeEnv('sonarqube-credentials') {
                        sh "${sonarScanner}/bin/sonar-scanner -Dsonar.projectKey=project-django -X"
                    }
                }
            }
        }

        stage('Docker login') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'dockerhub', usernameVariable: 'DOCKER_USER', passwordVariable: 'DOCKER_PASS')]) {
                    sh 'echo "$DOCKER_PASS" | docker login -u "$DOCKER_USER" --password-stdin'
                }
            }
        }

        stage('Build Docker image') {
            steps {
                sh 'docker build -t $DOCKER_IMAGE .'
                sh 'docker tag $DOCKER_IMAGE $DOCKER_TAG'
            }
        }

        stage('Docker push') {
            steps {
                sh 'docker push $DOCKER_IMAGE'
                sh 'docker push $DOCKER_TAG'
            }
        }

        stage('Docker logout') {
            steps {
                sh 'docker logout'
            }
        }

        stage('Run Docker Container') {
            steps {
                sh '''
                    if [ "$(docker ps -aq -f name=main_line)" ]; then
                        docker rm -f main_line
                    fi
                '''
                sh 'docker run -d -p 8000:8000 --name main_line $DOCKER_IMAGE'
            }
        }
    }

    post {
        always {
            echo 'Pipeline execution completed.'
        }
        success {
            echo 'Build and deployment successful.'
        }
        failure {
            echo 'Build failed.'
        }
    }
}
